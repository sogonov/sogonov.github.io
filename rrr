library IEEE; use IEEE.STD LOGIC 1164.ALL;
The VHDL language uses ' to indicate a comment.
entity fdc is Port ( D_0, D 1 : in STD LOGIC;
C : in STD LOGIC;
Q : out STD LOGIC);
end fdc;
architecture Behavioral of fdc is
signal x_0, x 1 : STD_LogIC;
begin
process (C)
begin
if rising edge(C) then
X0 <= D_0;
x 1 <= D_1;
end if;
end process;
process (C)
begin
if rising edge(C) then
Q<= X 0 and X 1;
end if;
end process;
end Behavioral;




COMPONENT fdc -' fdc' is the name of the module needed to be tested.
PORT ( C
: in STD LOGIC; D 0 : in STD LOGIC;
D 1 : in STD LOGIC;
Q: out STD LOGIC) ; END COMPONENT;
signal D 0 : std logic := '0'; signal D 1 : std logic := '0'; signal C : std logic := 'O'; --declare outputs and initialize them signal Q : std logic := '0';






uut: fdc PORT MAP (
	C => C,
	D_0 => D_0,
	D_1=> D_1,
	Q => Q) ;
clock: process 
begin
	C <= '0'; wait for 5 ns;
	C <= '1'; wait for 5 ns; 
end process;

tb : process
begin
	D_0 <= '0'; D_1 <= '0'; wait for 50 ns;
	D_0 <= '1'; wait for 20 ns; D_1 <= '1'; wait for 80 ns;
	D_1 <= '0'; wait for 40 ns; D_1 <= '0'; wait for 40 ns;
	D_0 <= '1'; wait for 12 ns; D_1 <= '1'; wait for 17 ns;
	D_0 <= '0'; D_1 <= '0'; wait for 50 ns;
end process;